//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.269
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace WCF_SalesOrder.ServicioLogError {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="ProcessId", Namespace="http://schemas.datacontract.org/2004/07/WSCommonOperations.ErrorHandler")]
    public enum ProcessId : int {
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Ninguno = 0,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        ItemMaster = 3,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Inventory = 2,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        InventoryCost = 1,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        Customers = 4,
        
        [System.Runtime.Serialization.EnumMemberAttribute()]
        SalesOrder = 5,
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="clsResponse", Namespace="http://www.praxair.com.co")]
    [System.SerializableAttribute()]
    public partial class clsResponse : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MessageDescField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeDescField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string MessageDesc {
            get {
                return this.MessageDescField;
            }
            set {
                if ((object.ReferenceEquals(this.MessageDescField, value) != true)) {
                    this.MessageDescField = value;
                    this.RaisePropertyChanged("MessageDesc");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string TypeDesc {
            get {
                return this.TypeDescField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeDescField, value) != true)) {
                    this.TypeDescField = value;
                    this.RaisePropertyChanged("TypeDesc");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.praxair.com.co", ConfigurationName="ServicioLogError.IUtilities")]
    public interface IUtilities {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.praxair.com.co/IUtilities/GetErrors", ReplyAction="http://www.praxair.com.co/IUtilities/GetErrorsResponse")]
        WCF_SalesOrder.ServicioLogError.clsResponse[] GetErrors(WCF_SalesOrder.ServicioLogError.ProcessId processId, int itemId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.praxair.com.co/IUtilities/InsertError", ReplyAction="http://www.praxair.com.co/IUtilities/InsertErrorResponse")]
        void InsertError(int staggingId, int errorId, WCF_SalesOrder.ServicioLogError.ProcessId processId, string description);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUtilitiesChannel : WCF_SalesOrder.ServicioLogError.IUtilities, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UtilitiesClient : System.ServiceModel.ClientBase<WCF_SalesOrder.ServicioLogError.IUtilities>, WCF_SalesOrder.ServicioLogError.IUtilities {
        
        public UtilitiesClient() {
        }
        
        public UtilitiesClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UtilitiesClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UtilitiesClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UtilitiesClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public WCF_SalesOrder.ServicioLogError.clsResponse[] GetErrors(WCF_SalesOrder.ServicioLogError.ProcessId processId, int itemId) {
            return base.Channel.GetErrors(processId, itemId);
        }
        
        public void InsertError(int staggingId, int errorId, WCF_SalesOrder.ServicioLogError.ProcessId processId, string description) {
            base.Channel.InsertError(staggingId, errorId, processId, description);
        }
    }
}
